import pandas as pd

# Definieer het pad naar het CSV-bestand
file_path = 'Path/To/vulnerabilities.csv'


def generate_bibtex_with_cvss(row):
    """
    Functie om een BibTeX-vermelding te genereren met CVSS-waarden voor een rij in de CSV-data.
    """
    # CVSS-waarden instellen op basis van de opgegeven informatie
    cvss_values = '"av = adjacent, ac = low, pr = low, ui = none, s = changed, c = high, i = none, a = none"'

    print(cvss_values)

    # Alternatieve shorthand notatie
    cvss_values_short = '"av=a, ac=l, pr=l, ui=n, s=c, c=h, i=n, a=n"'

    # Beschrijving toevoegen aan CVSS
    cvss_description = '"Etiam risus sapien, ornare at dui ut, semper eleifend arcu. In fermentum felis ut ornare convallis."'

    # Titel van kwetsbaarheid met severiteit badge
    cvss_title = '"\\\makecvssbadge CVE-CVE-2023-36025 affects Windows 10 High\\label{CVE-CVE-2023-36025}"'

    # Grafische weergave van CVSS-waarden
    cvss_box = '"\\makecvssbox"'

    bibtex_entry = f"@MISC{{CVE-{row['cve']},\n"
    bibtex_entry += f"  title = {{{row['Title']}}},\n"
    bibtex_entry += f"  howpublished = \"Available from MITRE, CVE-ID {row['cve']}.\",\n"
    bibtex_entry += f"  month = {row['published'].split('-')[1]},\n"
    bibtex_entry += f"  year = {{{row['published'].split('-')[0]}}},\n"
    bibtex_entry += f"  url = {{http://cve.mitre.org/cgi-bin/cvename.cgi?name={row['cve']} }},\n"
    bibtex_entry += "  urldate = {Unknown},\n"
    bibtex_entry += f"  cvss_values = {cvss_values},\n"
    bibtex_entry += f"  cvss_values_short = {cvss_values_short},\n"
    bibtex_entry += f"  cvss_description = {cvss_description},\n"
    bibtex_entry += f"  cvss_title = {cvss_title},\n"
    bibtex_entry += f"  cvss_box = {cvss_box}\n"
    bibtex_entry += "}}\n\n"
    return bibtex_entry


# Functie om BibTeX-vermeldingen met CVSS-waarden voor alle rijen te genereren
def generate_bibtex_with_cvss_for_all_rows(csv_file_path, output_file_path):
    vulnerabilities_df = pd.read_csv(csv_file_path)
    bibtex_entries = vulnerabilities_df.apply(generate_bibtex_with_cvss, axis=1)

    with open(output_file_path, 'w') as bibfile:
        for entry in bibtex_entries:
            bibfile.write(entry)


# Pad naar het uitvoer-BibTeX-bestand
output_bibtex_file_with_cvss = 'Path/To/cvss.bib'

# Het genereren van het BibTeX-bestand met CVSS-waarden
generate_bibtex_with_cvss_for_all_rows(file_path, output_bibtex_file_with_cvss)
